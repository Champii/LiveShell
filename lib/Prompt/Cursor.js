// Generated by LiveScript 1.3.1
(function(){
  var blessed, Cursor;
  blessed = require('blessed');
  Cursor = (function(){
    Cursor.displayName = 'Cursor';
    var prototype = Cursor.prototype, constructor = Cursor;
    function Cursor(screen, prompt){
      this.screen = screen;
      this.prompt = prompt;
    }
    prototype.Init = function(){
      var this$ = this;
      this.program = this.screen.program;
      this.screen.program.showCursor();
      return this.screen.on('keypress', function(key, obj){
        var ref$;
        switch (false) {
        case !((key != null && key.length) && 'ch' in obj):
          this$.program.cursorForward();
          break;
        case !((key != null && key.length) && ((ref$ = obj.name) != null ? ref$.length : void 8) === 1):
          this$.program.cursorForward();
          break;
        case obj.name !== 'space':
          this$.program.cursorForward();
          break;
        case !(obj.name === 'right' && this$.program.x < this$.prompt.text.content.length):
          this$.program.cursorForward();
          break;
        case obj.name !== 'backspace':
          this$.program.cursorBackward();
          break;
        case obj.name !== 'left':
          this$.program.cursorBackward();
        }
        return this$.screen.render();
      });
    };
    return Cursor;
  }());
  module.exports = Cursor;
}).call(this);
